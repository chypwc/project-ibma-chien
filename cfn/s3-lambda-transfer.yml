AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Set up two S3 buckets and a Lambda function that copies files from source to destination

Parameters:
  SourceBucketName:
    Type: String
  DestinationBucketName:
    Type: String
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket where the lambda zip is stored
  LambdaS3Key:
    Type: String
    Description: Key (path) to the Lambda zip file

Resources:
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt TransferFunction.Arn

  DestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DestinationBucketName

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: s3-transfer-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: s3-transfer-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${SourceBucketName}/*
                  - !Sub arn:aws:s3:::${DestinationBucketName}/*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  TransferFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: S3TransferFunction
      Handler: transfer.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.11
      Timeout: 30
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
      Environment:
        Variables:
          DEST_BUCKET: !Ref DestinationBucketName

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref TransferFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub arn:aws:s3:::${SourceBucketName}

  BucketNotification:
    Type: AWS::S3::BucketNotification
    DependsOn: LambdaInvokePermission
    Properties:
      Bucket: !Ref SourceBucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt TransferFunction.Arn
